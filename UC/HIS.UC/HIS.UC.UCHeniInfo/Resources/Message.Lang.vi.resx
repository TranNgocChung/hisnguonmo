<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BatBuocNhapTenBenhVoiTruongHopBenhNhanLaDungTuyenGioiThieu" xml:space="preserve">
    <value>Bắt buộc nhập tên chẩn đoán với bện nhân là đúng tuyến giới thiệu</value>
  </data>
  <data name="BatBuocPhaiChonTruongHop" xml:space="preserve">
    <value>Trường hợp bệnh viện tuyến Trung ương hoặc tuyến tỉnh và có nơi đăng ký KCBBĐ trên thẻ không phải là bệnh viện thì bắt buộc phải chọn một trong các loại đúng tuyến (cấp cứu, giới thiệu, hẹn khám)</value>
  </data>
  <data name="MaBenhChinhKhongHopLe" xml:space="preserve">
    <value>Mã bệnh không hợp lệ</value>
  </data>
  <data name="MaBenhKhongKhopVoiTenBenh" xml:space="preserve">
    <value>Mã bệnh {0} không khớp với tên bệnh {1}</value>
  </data>
  <data name="MaDangKyKCBBDKhacVoiCuaVien" xml:space="preserve">
    <value>Mã đăng ký KCB BĐ khác với của viện. Bạn phải chọn trường hợp!</value>
  </data>
  <data name="NguoiDungNhapNgayKhongHopLe" xml:space="preserve">
    <value>Ngày không hợp lệ, vui lòng nhập lại</value>
  </data>
  <data name="PhaiDatDu5Nam6ThangMoiCoTheChonDTMCCT" xml:space="preserve">
    <value>Chỉ cho phép chọn thời điểm miễn cùng chi trả khi đạt đủ 5 năm và 6 tháng </value>
  </data>
  <data name="SoTheBHYTKhongHopLe" xml:space="preserve">
    <value>Số thẻ {0} không hợp lệ</value>
  </data>
  <data name="SoTheDaDuocSuDung" xml:space="preserve">
    <value>Số thẻ {0} đã có người sử dụng</value>
  </data>
  <data name="ThoiDiemMienCungChiTraPhaiCungNamVoiNamHienTai" xml:space="preserve">
    <value>Thời điểm miễn cùng chi trả phải cùng nằm với năm hiện tại</value>
  </data>
  <data name="TruongDuLieuBatBuoc" xml:space="preserve">
    <value>Trường dữ liệu bắt buộc</value>
  </data>
	<data name="PhaiCoGiayChungNhanKhongCungChiTra" xml:space="preserve">
    <value>Bệnh nhân phải có giấy chứng nhận không cùng chi trả trong năm. Bạn có muốn tiếp tục?</value>
  </data>
</root>